
==============================
ðŸ“˜ GUIDE D'INSTALLATION & USAGE DU PIPELINE DOCKERISÃ‰
==============================

Ce guide rÃ©capitule les Ã©tapes nÃ©cessaires pour construire et exÃ©cuter le pipeline e-commerce avec Docker et Docker Compose.

--------------------------------------------------
ðŸ”¹ PRÃ‰REQUIS
--------------------------------------------------
- Docker Desktop installÃ© et configurÃ© avec WSL2
- Projet structurÃ© avec un Dockerfile et un docker-compose.yml
- Dossiers `data/raw/` (fichiers source) et `logs/` (sorties) prÃ©sents

--------------------------------------------------
ðŸ”¹ STRUCTURE ATTENDUE
--------------------------------------------------

ton-projet/
â”œâ”€â”€ Dockerfile
â”œâ”€â”€ docker-compose.yml
â”œâ”€â”€ .dockerignore
â”œâ”€â”€ data/
â”‚   â””â”€â”€ raw/
â”œâ”€â”€ logs/
â”œâ”€â”€ orchestration/
â”‚   â””â”€â”€ pipeline_master.sh
â”œâ”€â”€ requirements.txt
â””â”€â”€ ...

--------------------------------------------------
ðŸ”¹ .dockerignore (exemple)
--------------------------------------------------

data/processed/
data/staging/
data/archive/
data/quality/
venv/
__pycache__/
*.pyc
*.log
.git/
!data/raw/**

--------------------------------------------------
ðŸ”¹ docker-compose.yml (avec build automatique)
--------------------------------------------------

version: "3.9"

services:
  pipeline:
    build:
      context: .
      dockerfile: Dockerfile
    image: pipeline_data_engineer
    container_name: pipeline_job
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: "no"

--------------------------------------------------
ðŸ”¹ COMMANDES PRINCIPALES
--------------------------------------------------

# 1. Construire lâ€™image avec Docker Compose
docker compose build

# 2. Lancer le pipeline avec les bons volumes
docker compose run pipeline

# 3. VÃ©rifier les fichiers gÃ©nÃ©rÃ©s localement
ls ./data/processed/
ls ./logs/

# 4. Nettoyer les containers ou images si besoin
docker container prune     # Supprime les containers arrÃªtÃ©s
docker image prune         # Supprime les images inutilisÃ©es
docker system prune -a     # Tout nettoyer (dangereux)

--------------------------------------------------
ðŸ”¹ EN CAS DE BESOIN
--------------------------------------------------

# Ouvrir un shell dans le container pour debug
docker compose run pipeline bash

# Voir les logs du container lancÃ©
docker logs pipeline_job

==============================
ðŸ“˜ FIN DU GUIDE
==============================
