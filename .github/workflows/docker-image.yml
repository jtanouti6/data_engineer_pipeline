name: 🚀 CI - Build & Run Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:

jobs:
  build-and-run:
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    runs-on: self-hosted
    name: 🧱 Build + 🏃 Run Pipeline

    steps:
      - name: 🧬 Checkout code
        uses: actions/checkout@v4

      - name: 🕒 Générer un tag de version (date/heure)
        id: version
        run: echo "tag=$(date +'%Y-%m-%d-%H%M')" >> $GITHUB_OUTPUT

      - name: 🐳 Construire l'image Docker avec le tag versionné
        run: |
          docker compose build
          docker tag img-pl-dt-eng img-pl-dt-eng:${{ steps.version.outputs.tag }}

      - name: 🔄 Retag pour usage danls docker-compose
        run: |
          docker tag img-pl-dt-eng:${{ steps.version.outputs.tag }} img-pl-dt-eng

      - name: 🚀 Exécuter le pipeline via le service docker-compose
        run: |
          docker compose run srv-pl-dt-eng

      - name: 📂 Sauvegarder les artefacts générés (dashboard, logs)
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-et-logs
          path: |
            data/processed/dashboard_quality.html
            logs/*.log
          if-no-files-found: warn
      - name: 🔧 Corriger les droits d'accès
        run: |
            sudo chown -R administrateur:administrateur data/ logs/
